{"version":3,"sources":["components/navbar.jsx","components/footer.jsx","pages/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","bg","variant","Brand","Nav","className","Link","href","target","Component","Footer","fixed","style","prop","cssProperty","themeKey","Text","styled","span","typography","theme","greeting","fontSize","lineHeight","whiteSpace","align","normal","keywords","color","textDecoration","HomePage","NoSsr","Box","width","left","top","position","as","Button","rel","aria-hidden","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iSAIqBA,E,uKAEjB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,SACzB,kBAACF,EAAA,EAAOG,MAAR,mBACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,SAAf,SACA,kBAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,aAAf,cACA,kBAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,YAAf,eACA,kBAACH,EAAA,EAAIE,KAAL,CACEC,KAAK,qFACLC,OAAO,UAFT,iB,GAVwBC,aCAfC,E,uKAEjB,OACE,6BACE,kBAACV,EAAA,EAAD,CAAQW,MAAM,SAASV,GAAG,QAAQC,QAAQ,SACxC,kBAACE,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,wCAAwCC,OAAO,UAA9D,YAAgF,uBAAGH,UAAU,wBAC3F,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,6BAA6BC,OAAO,UAAnD,UAAmE,uBAAGH,UAAU,mBAChF,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,wCAAwCC,OAAO,UAA9D,aAAiF,uBAAGH,UAAU,6B,GARtEI,a,+KCIpC,IAAMP,EAAUU,YAAM,CACpBC,KAAM,UACNC,aAAa,EACbC,SAAU,eAKNC,EAAOC,IAAOC,KAAV,IAENhB,EACAiB,KAGEC,EAAQ,CACZD,WAAY,CACVE,SAAU,CACRC,SAAU,GACVC,WAAY,IACZC,WAAY,SACZC,MAAO,QAETC,OAAQ,CACNJ,SAAU,GACVC,WAAY,IACZC,WAAY,SACZC,MAAO,QAETE,SAAU,CACRL,SAAU,GACVC,WAAY,IACZC,WAAY,SACZI,MAAO,UACPH,MAAO,OACPI,eAAgB,eAKP,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAeX,MAAOA,GACpB,kBAACY,EAAA,EAAD,CACEC,MAAO,IACPR,MAAM,OACNS,KAAK,QACLC,IAAI,QACJC,SAAS,YACT,kBAACpB,EAAD,CAAMd,QAAQ,WAAWmC,GAAG,OAA5B,yBAGA,kBAACrB,EAAD,CAAMd,QAAQ,UAAd,cAGA,kBAACc,EAAD,CAAMd,QAAQ,YAAd,qBAGA,kBAACc,EAAD,CAAMd,QAAQ,UAAd,SAGA,6BACA,kBAACc,EAAD,CAAMd,QAAQ,UAAd,SAGA,kBAACc,EAAD,CAAMd,QAAQ,YAAd,WAGA,kBAACc,EAAD,CAAMd,QAAQ,UAAd,4CAGA,6BACA,kBAACc,EAAD,CAAMd,QAAQ,UAAd,2BAGA,kBAACI,EAAA,EAAD,CAAMC,KAAK,wCAAwCC,OAAO,UACxD,kBAACQ,EAAD,CAAMd,QAAQ,YAAd,WAIF,kBAACc,EAAD,CAAMd,QAAQ,UAAd,SAGA,6BACA,6BACA,kBAACoC,EAAA,EAAD,CACEpC,QAAQ,eACRK,KAAK,qFACHC,OAAO,SACP+B,IAAI,uBAJR,eAKgB,uBAAGlC,UAAU,iBAAiBmC,cAAY,aC7ErDC,MAZf,WACE,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,GAAGC,UAAWd,KAElC,kBAAC,EAAD,Q,QCJce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e534eb04.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"light\" variant=\"light\">\n          <Navbar.Brand>Letao Chen</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">About</Nav.Link>\n            <Nav.Link href=\"#features\">Experience</Nav.Link>\n            <Nav.Link href=\"#pricing\">Photography</Nav.Link>\n            <Nav.Link\n              href=\"https://drive.google.com/file/d/1DJQPZrm4v3E9V_TOQB0ixAloCXzpRV5O/view?usp=sharing\"\n              target=\"_blank\">\n              Resume\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"bottom\" bg=\"light\" variant=\"light\">\n          <Nav className=\"ml-auto\">\n          <Nav.Link href=\"https://www.linkedin.com/in/letao-ch/\" target=\"_blank\">LinkedIn <i className=\"fab fa-linkedin-in\"></i></Nav.Link>\n            <Nav.Link href=\"https://github.com/LetaoCh\" target=\"_blank\">GitHub <i className=\"fab fa-github\"></i></Nav.Link>\n            <Nav.Link href=\"https://www.instagram.com/itsumo0628/\" target=\"_blank\">Instagram <i className=\"fab fa-instagram\"></i></Nav.Link>\n          </Nav>\n        </Navbar>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { style, typography } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Button from 'react-bootstrap/Button'\n\nconst variant = style({\n  prop: 'variant',\n  cssProperty: false,\n  themeKey: 'typography',\n});\n\n// âš  Text is already defined in the global context:\n// https://developer.mozilla.org/en-US/docs/Web/API/Text/Text.\nconst Text = styled.span`\n  font-family: Helvetica;\n  ${variant}\n  ${typography}\n`;\n\nconst theme = {\n  typography: {\n    greeting: {\n      fontSize: 45,\n      lineHeight: 1.5,\n      whiteSpace: \"normal\",\n      align: \"left\",\n    },\n    normal: {\n      fontSize: 20,\n      lineHeight: 1.5,\n      whiteSpace: \"normal\",\n      align: \"left\",\n    },\n    keywords: {\n      fontSize: 25,\n      lineHeight: 1.5,\n      whiteSpace: \"normal\",\n      color: \"#e1ac01\",\n      align: \"left\",\n      textDecoration: \"underline\",\n    },\n  },\n};\n\nexport default function HomePage() {\n  return (\n    <NoSsr>\n      <ThemeProvider theme={theme}>\n        <Box\n          width={430}\n          align=\"left\"\n          left=\"61.8%\"\n          top=\"61.8%\"\n          position='absolute'>\n          <Text variant=\"greeting\" as=\"div\">\n            Ciao! I am Letao.&nbsp;\n          </Text>\n          <Text variant=\"normal\">\n            I am a&nbsp;\n          </Text>\n          <Text variant=\"keywords\">\n            Software Engineer\n          </Text>\n          <Text variant=\"normal\">\n            ,&nbsp;\n          </Text>\n          <br />\n          <Text variant=\"normal\">\n            a&nbsp;\n          </Text>\n          <Text variant=\"keywords\">\n            Student\n          </Text>\n          <Text variant=\"normal\">\n            &nbsp;from the University of Michigan,&nbsp;\n          </Text>\n          <br />\n          <Text variant=\"normal\">\n            a person that takes&nbsp;\n          </Text>\n          <Link href=\"https://www.instagram.com/itsumo0628/\" target=\"_blank\">\n            <Text variant=\"keywords\">\n              Photos\n            </Text>\n          </Link>\n          <Text variant=\"normal\">\n            .&nbsp;\n          </Text>\n          <br />\n          <br />\n          <Button \n            variant=\"outline-dark\"\n            href=\"https://drive.google.com/file/d/1DJQPZrm4v3E9V_TOQB0ixAloCXzpRV5O/view?usp=sharing\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              View Resume <i className=\"fa fa-download\" aria-hidden=\"true\"></i>\n          </Button>\n        </Box>\n      </ThemeProvider>\n    </NoSsr>\n  );\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css';\n// import About from './components/about'\nimport NavBar from './components/navbar'\nimport Footer from './components/footer'\n\nimport HomePage from './pages/HomePage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <Switch>\n        <Route exact path=\"\" component={HomePage} />\n      </Switch>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}